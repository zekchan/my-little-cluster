apiVersion: v1
kind: Service
metadata:
  name: erigon-p2p
  labels:
    app: erigon
spec:
  type: NodePort
  ports:
  - port: 30303
    targetPort: 30303
    nodePort: 30303
  selector:
    app: erigon
---
apiVersion: v1
kind: Service
metadata:
  name: erigon
  labels:
    app: erigon
spec:
  type: ClusterIP
  ports:
  - port: 6060
    targetPort: 6060
    name: metrics
  - port: 8545
    targetPort: 8545
    name: http
  - port: 8546
    targetPort: 8546
    name: ws
  selector:
    app: erigon
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: erigon
spec:
  selector:
    matchLabels:
      app: erigon # has to match .spec.template.metadata.labels
  serviceName: "erigon"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: erigon # has to match .spec.selector.matchLabels
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      terminationGracePeriodSeconds: 10
      containers:
      - name: erigon
        image: erigontech/erigon:v3.0.2
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        resources:
          requests:
            cpu: 0.5
            memory: 3Gi
          limits:
            cpu: 1
            memory: 3.5Gi
        ports:
        - containerPort: 8546
          name: ws
        - containerPort: 8545
          name: http
        - containerPort: 6060
          name: metrics
        - containerPort: 30333
          name: erigon-p2p
        readinessProbe:
          httpGet:
            path: /debug/metrics/prometheus
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        args:
          - --prune.mode=minimal
          - --datadir=/data
          - --rpc.gascap=600000000
          - --metrics
          - --rpc.returndata.limit=999999999
          - --rpc.batch.limit=2000
          - --metrics.addr=0.0.0.0
          - --metrics.port=6060
          - --datadir=/data
          - --torrent.download.rate=1000mb
          - --http.api=eth,erigon,web3,net,debug,trace,txpool
          - --http.addr=0.0.0.0
          - --http.vhosts=*
          - --ws
          - --http
          - --beacon.api.addr=0.0.0.0
          - --beacon.api.port=3500
          - --beacon.api=beacon,builder,config,debug,node,validator,lighthouse
          - --caplin.discovery.port=4032
          - --caplin.discovery.tcpport=4033
          - --http.port=8545
          - --ws.port=8546
          - --chain=hoodi
        volumeMounts:
        - name: data
          mountPath: /data
          subPath: erigon
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard-rwo
      resources:
        requests:
          storage: 50Gi
---
apiVersion: monitoring.googleapis.com/v1
kind: PodMonitoring
metadata:
  name: erigon-metrics
spec:
  selector:
    matchLabels:
      app: erigon
  endpoints:
  - port: metrics
    interval: 30s
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: erigon
spec:
  rules:
  - http:
      paths:
      - path: /debug/metrics/prometheus
        pathType: Prefix
        backend:
          service:
            name: erigon
            port:
              name: metrics
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: erigon
            port:
              name: ws
      - path: /
        pathType: Prefix
        backend:
          service:
            name: erigon
            port:
              name: http